local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local plr = game.Players.LocalPlayer
local character = plr.Character or plr.CharacterAdded:Wait()
local humPart = character:WaitForChild("HumanoidRootPart")
plr.CharacterAdded:Connect(function(char)
    character = char
    humPart = char:WaitForChild("HumanoidRootPart")
end)
local map
game.Workspace.DescendantAdded:Connect(function(m)
    if m:IsA("Model") and m.Name == "CoinContainer" then
        map = m
    end
end)
local delay = 2.5
getgenv().farm = false

-- Create Rayfield Window
local Window = Rayfield:CreateWindow({
    Name = "MM2 Summer",
    LoadingTitle = "MM2 Summer Farm",
    LoadingSubtitle = "by ArceusXScripts",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "MM2SummerConfig",
        FileName = "Config"
    }
})

-- Create Toggle for BeachBall Farm
Window:CreateToggle({
    Name = "BeachBall Farm",
    CurrentValue = false,
    Callback = function(bool)
        getgenv().farm = bool
        while getgenv().farm do
            if (not map) or (not map.Parent) then
                for _, m in ipairs(game.Workspace:GetDescendants()) do
                    if m:IsA("Model") and m.Name == "CoinContainer" then
                        map = m
                        break
                    end
                end
            end
            if map and map.Parent then
                for _, coin in ipairs(map:GetChildren()) do
                    if not getgenv().farm then break end
                    if coin:IsA("Part") and coin.Name == "Coin_Server" and coin:GetAttribute("CoinID") == "BeachBall" then
                        local cv = coin:FindFirstChild("CoinVisual")
                        if cv and cv.Transparency ~= 1 then
                            if not humPart or not humPart.Parent then
                                humPart = character and character:FindFirstChild("HumanoidRootPart")
                                if not humPart then break end
                            end
                            for _, p in pairs(character:GetChildren()) do
                                if p:IsA("BasePart") and p.CanCollide then p.CanCollide = false end
                            end
                            humPart.CFrame = coin.CFrame * CFrame.new(0, 6, 0)
                            task.wait(delay)
                        end
                    end
                end
            end
            task.wait(1)
        end
    end
})

-- Create Input for Farm Delay
Window:CreateInput({
    Name = "Farm Delay",
    PlaceholderText = "Enter delay (seconds)",
    RemoveTextAfterFocusLost = false,
    Callback = function(num)
        delay = tonumber(num) or 2.5
    end
})

-- Create Button for Anti AFK
Window:CreateButton({
    Name = "Anti AFK",
    Callback = function()
        local GC = getconnections or get_signal_cons
        if GC then
            for _, v in pairs(GC(plr.Idled)) do
                if v.Disable then v:Disable() elseif v.Disconnect then v:Disconnect() end
            end
        else
            local vu = cloneref(game:GetService("VirtualUser"))
            plr.Idled:Connect(function()
                vu:CaptureController()
                vu:ClickButton2(Vector2.new())
            end)
        end
    end
})

-- Create Label
Window:CreateLabel({
    Name = "Credits",
    Text = "~ t.me/arceusxscripts"
})

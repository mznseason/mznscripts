local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
local plr = game.Players.LocalPlayer
local character = plr.Character or plr.CharacterAdded:Wait()
local humPart = character:WaitForChild("HumanoidRootPart")
plr.CharacterAdded:Connect(function(char)
    character = char
    humPart = char:WaitForChild("HumanoidRootPart")
end)
local map
game.Workspace.DescendantAdded:Connect(function(m)
    if m:IsA("Model") and m.Name == "CoinContainer" then
        map = m
    end
end)
local delay = 2.5
getgenv().farm = false

-- Create Rayfield Window
local Window = Rayfield:CreateWindow({
    Name = "MM2 Summer",
    LoadingTitle = "BeachBall Farm",
    LoadingSubtitle = "by Mnnz Hub",
    ConfigurationSaving = { Enabled = false },
    KeySystem = false
})

-- Create Tab
local Tab = Window:CreateTab("Farm", nil)

-- Create Toggle for BeachBall Farm
Tab:CreateToggle({
    Name = "BeachBall Farm",
    Info = "Toggle to start/stop farming BeachBall coins",
    CurrentValue = false,
    Callback = function(state)
        getgenv().farm = state
        while getgenv().farm do
            if (not map) or (not map.Parent) then
                for _,m in ipairs(game.Workspace:GetDescendants()) do
                    if m:IsA("Model") and m.Name == "CoinContainer" then
                        map = m
                        break
                    end
                end
            end
            if map and map.Parent then
                for _,coin in ipairs(map:GetChildren()) do
                    if not getgenv().farm then break end
                    if coin:IsA("Part") and coin.Name=="Coin_Server" and coin:GetAttribute("CoinID")=="BeachBall" then
                        local cv = coin:FindFirstChild("CoinVisual")
                        if cv and cv.Transparency~=1 then
                            if not humPart or not humPart.Parent then
                                humPart = character and character:FindFirstChild("HumanoidRootPart")
                                if not humPart then break end
                            end
                            for _,p in pairs(character:GetChildren()) do
                                if p:IsA("BasePart") and p.CanCollide then p.CanCollide=false end
                            end
                            humPart.CFrame = coin.CFrame * CFrame.new(0,6,0)
                            task.wait(delay)
                        end
                    end
                end
            end
            task.wait(1)
        end
    end
})

-- Create Input for Farm Delay
Tab:CreateInput({
    Name = "Farm Delay",
    Info = "Enter delay in seconds",
    PlaceholderText = "2.5",
    NumbersOnly = true,
    OnEnter = true,
    Callback = function(txt)
        delay = tonumber(txt) or 2.5
    end
})

-- Create Button for Anti AFK
Tab:CreateButton({
    Name = "Anti AFK",
    Info = "Prevent AFK kick",
    Callback = function()
        local GC = getconnections or get_signal_cons
        if GC then
            for _,v in pairs(GC(plr.Idled)) do
                if v.Disable then v:Disable() elseif v.Disconnect then v:Disconnect() end
            end
        else
            local vu = cloneref(game:GetService("VirtualUser"))
            plr.Idled:Connect(function()
                vu:CaptureController()
                vu:ClickButton2(Vector2.new())
            end)
        end
    end
})

-- Create Label
Tab:CreateLabel({
    Name = "~ Mnnz Hub"
})
